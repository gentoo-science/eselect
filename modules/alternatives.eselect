# Copyright 2015 Gentoo Foundation
# Copyright 2008 Mike Kelly
# Copyright 2009, 2013 David Leverton
# Copyright 2010 Bo Ã˜rsted Andresen
# Distributed under the terms of the GNU General Public License v2

inherit alternatives-common

DESCRIPTION="Maintain Alternatives symlinks"
VERSION="20150521"
MAINTAINER="sci@gentoo.org"

show_extra_help_text() {
	cat <<- ENDOFTEXT
	This module is intended for internal use when a package is installed,
	updated or removed. For alternatives for which it is likely that
	users will need control over which provider is selected, there will be
	a separate eselect module installed to do so.
	ENDOFTEXT
}

### update action ###

# all functions implemented in alternatives-common.bash as defined for
# both "eselect alternatives" and individual modules

describe_update() {
	alternatives_describe_update
}

describe_update_parameters() {
	echo "<alternative> $(alternatives_describe_update_parameters)"
}

describe_update_options() {
	echo "<alternative> : the name of the alternative to set a provider for"
	alternatives_describe_update_options
}

do_update() {
	local ALTERNATIVE=$1
	shift
	[[ -z "${ALTERNATIVE}" ]] && die -q "Missing required parameter 'alternative'"
	alternatives_do_update "$@"
}

options_update() {
	alternatives_options_update
}

### create action ###

describe_create() {
	echo "Create a new alternative"
}

describe_create_parameters() {
	echo "<alternative>"
}

describe_create_options() {
	echo "<alternative> : the name of the alternative to create"
}

do_create() {
	[[ $# == 1 ]] || die "Need exactly one alternative name"

	local auto_dir="${ESELECT_AUTO_GENERATED_MODULES_PATH}"
	local auto_file="${auto_dir}/${1}.eselect"

	if [[ ! -e "${auto_file}" ]]; then
		if [[ ! -e "${auto_dir}" ]]; then
			mkdir -p "${auto_dir}" || die "Failed to create ${auto_dir}"
		elif [[ ! -d "${auto_dir}" ]]; then
			die "${auto_dir} exists but is a file"
		fi
		cat >> ${auto_file} <<- ENDOFTEXT
			DESCRIPTION="${DESCRIPTION} for ${1}"
			VERSION="${VERSION}"
			MAINTAINER="${MAINTAINER}"
			ESELECT_MODULE_GROUP="Alternatives"

			ALTERNATIVE="${1}"

			inherit alternatives
		ENDOFTEXT
	fi
}
### remove action ###

describe_remove() {
	echo "Remove an existing alternative"
}

describe_remove_parameters() {
	echo "<alternative>"
}

describe_remove_options() {
	echo "<alternative> : the name of the alternative to remove"
}

do_remove() {
	[[ $# == 1 ]] || die "Need exactly one alternative name"

	local auto_dir="${ESELECT_AUTO_GENERATED_MODULES_PATH}"
	local auto_file="${auto_dir}/${1}.eselect"

	if [[ -e "${auto_file}" ]]; then
		rm "${auto_file}" || die "Failed to remove alternative: ${1}"
	fi
}
